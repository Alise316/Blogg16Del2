@using BloggBlazorServer.Services
@using BloggBlazorServer.Models
@using Microsoft.AspNetCore.Identity
@using System.Web
@inject UserStateService UserStateService
@inject NavigationManager NavigationManager
@inject SearchService SearchService

<style>
    .navbar-collapse {
        display: flex;
        align-items: center;
        justify-content: flex-end;
    }

    .navbar-nav .EditForm {
        display: flex;
        align-items: center;
        gap: 10px;
        margin-right: 15px;
    }

    .navbar-nav .InputText {
        border: 2px solid #ddd;
        padding: 5px 10px;
        border-radius: 5px;
        font-size: 14px;
    }

    .navbar-nav button {
        background-color: #4CAF50;
        color: white;
        border: none;
        padding: 6px 12px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 14px;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s;
    }

        .navbar-nav button:hover {
            background-color: #45a049;
        }

</style>


<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">BloggBlazorServer</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>


        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Hjem
            </NavLink>
        </div>
        @if (!UserStateService.IsLoggedIn)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="register">
                    <span class="oi oi-pencil" aria-hidden="true"></span> Registrer bruker
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="login">
                    <span class="oi oi-account-login" aria-hidden="true"></span> Logg inn
                </NavLink>
            </div>
        }
        else
        {


            <div class="nav-item px-3">
                <NavLink class="nav-link" href="min-blogg">
                    <span class="oi oi-book" aria-hidden="true"></span> Min Blogg
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="abonnementer">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Abonnerte Blogger
            </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="chatroom">
                    <span class="oi oi-chat" aria-hidden="true"></span> Chat
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="utforsk-blogger">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Utforsk Blogger
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="search">
            <span class="oi oi-magnifying-glass" aria-hidden="true"></span> Søk
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="logout">
                    <span class="oi oi-account-logout" aria-hidden="true"></span> Logg ut
                </NavLink>
            </div>
            

        }

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}


@code {
    private SearchModel searchModel = new SearchModel();

    private void OnSearch()
    {
        NavigationManager.NavigateTo($"/redirect?query={searchModel.SearchTerm}");
    }


    private class SearchModel
    {
        public string SearchTerm { get; set; }
    }



    private SearchResult searchResults;

}

@code {
    protected override void OnInitialized()
    {
        UserStateService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        UserStateService.OnChange -= StateHasChanged;
    }
}



